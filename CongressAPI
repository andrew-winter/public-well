library(tidyverse)
library(httr)
options(stringsAsFactors = FALSE)
key <- "6NJCsRT0VQzHWYty16Lm1tIcxqmzX2vGya4FJj1p"
baseURL <- "https://api.propublica.org/congress/v1/"
grabChamber <- function(x) {
  content(GET(x, add_headers(`X-API-Key` = key)), 'parsed')}
rm_null <- function(x) {
  x[sapply(x, is.null)] <- NA
  return(x) }

allHouseURLs <- paste0(baseURL, c(98:116),"/house/members.json")
allHouses <- lapply(allHouseURLs, grabChamber)
HouseTibble <- lapply(allHouses, function(x) {x$results[[1]] %>% as_tibble} )
RepsList <- lapply(1:19, function(house) { 
  lapply(1:length(HouseTibble[[house]]$members), function(x) {
    rm_null(HouseTibble[[house]]$members[[x]]) } ) %>% bind_rows() } )
# This (I think) solves the problem of missing values for certain reps
# 'bind_rows()' is flexible enough to able to add NAs to any missing column

reps <- RepsList %>% bind_rows(.id = "house")


allsenateURLs <- paste0(baseURL,c(80:116),"/senate/members.json")
allSenates <- lapply(allsenateURLs, grabChamber)
SenateTibble <- lapply(allSenates, function(x) {x$results[[1]] %>% as_tibble} )
SenatorsList <- lapply(1:37, function(senate) {
  lapply(1:length(SenateTibble[[senate]]$members), function(x) {
    rm_null(SenateTibble[[senate]]$members[[x]]) } ) %>% bind_rows() } )

senators <- SenatorsList %>% bind_rows(.id = "senate")
