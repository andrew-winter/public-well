library(httr)
options(stringsAsFactors = FALSE)
key <- "6NJCsRT0VQzHWYty16Lm1tIcxqmzX2vGya4FJj1p"
baseURL <- "https://api.propublica.org/congress/v1/"
allsenateURLs <- paste0(baseURL,c(80:116),"/senate/members.json")
grabSenate <- function(x) {
  content(GET(x, add_headers(`X-API-Key` = key)), 'parsed')}
allSenates <- list()
allSenates <- lapply(allsenateURLs, grabSenate)

# Haven't figured out how to change this to 'lapply()'
# Problem is that the iteration is before the end of the path
SenateTibble <- list()
for (i in 1:37) {
  SenateTibble[[i]] <- allSenates[[i]]$results[[1]] %>% as_tibble()
}

# Easiest way to remove 'next_election' from these three
SenateTibble[[22]][[5]][[16]][30] <- NULL
SenateTibble[[23]][[5]][[16]][30] <- NULL
SenateTibble[[23]][[5]][[35]][30] <- NULL


# Eventually, can condense the rbind-transpose loop, name loop-----------------
SenatorTibble <- list()
namesList <- list()
works <- c(1:23, 25, 29:31, 35, 37)
for (i in works) {
  SenatorTibble[[i]] <- sapply(SenateTibble[[i]]$members, rbind) %>% t()
    namesList[[i]] <- names(SenateTibble[[i]]$members[[1]])
      colnames(SenatorTibble[[i]]) <- namesList[[i]]
}
SenatorTibble <- lapply(SenatorTibble, as_tibble)
for (i in works) {
  SenatorTibble[[i]] <- SenatorTibble[[i]] %>% mutate_all(as.character)
}


dwork <- c(24, 26:28, 32:34, 36)
for (j in dwork) {
  for (i in 1:length(SenateTibble[[j]][[5]])) {
    if (length(SenateTibble[[j]][[5]][[i]]) != 
        length(SenateTibble[[j]][[5]][[1]])) {
      SenateTibble[[j]][[5]][[i]] <- append(SenateTibble[[j]][[5]][[i]], "added",
      after = 29)
      names(SenateTibble[[j]][[5]][[i]]) <- names(SenateTibble[[j]][[5]][[1]])
    } else {
      SenateTibble[[j]][[5]][[i]] <- SenateTibble[[j]][[5]][[i]]
    }
  }
  SenatorTibble[[j]] <- sapply(SenateTibble[[j]]$members, rbind) %>% t()
  namesList[[j]] <- names(SenateTibble[[j]]$members[[1]])
  colnames(SenatorTibble[[j]]) <- namesList[[j]]
}

# Eventually, can condense the rbind-transpose loop, name loop-----------------
SenatorTibble <- lapply(SenatorTibble, as_tibble)
for (k in dwork) {
  SenatorTibble[[k]] <- SenatorTibble[[k]] %>% mutate_all(as.character)
}


numerize <- function(x) {
  if (length(names(x)) > 43) {
    x %>% mutate(
         total_votes = as.numeric(total_votes),
        missed_votes = as.numeric(missed_votes),
       total_present = as.numeric(total_present),
       next_election = as.numeric(next_election),
    missed_votes_pct = as.numeric(missed_votes_pct),
votes_with_party_pct = as.numeric(votes_with_party_pct))
  } else {
x}
}
SenatorTibble <- lapply(SenatorTibble, numerize)




reducer <- function(x) {
  x %>% select(id, last_name, gender, party, state, 
    next_election, contains("_votes"), votes_with_party_pct)}
reducer2 <- function(x) {
  x %>% select(id, senate, last_name, gender, party, state, 
    next_election, contains("_votes"), votes_with_party_pct)}


last10 <- c(28:37)
agglist <- list()
for (i in last10) {
  agglist[[i - 27]] <- SenatorTibble[[i]]}


agg <- bind_rows(agglist, .id = "senate") %>% 
  mutate(senate = as.integer(senate)) %>% arrange(id, senate)
agg <- agg[duplicated(agg$id),]
agg <- agg %>% reducer2()
