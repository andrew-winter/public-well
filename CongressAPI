# set up and signature functions
library(httr)
options(stringsAsFactors = FALSE)
key <- PROPUBLICA_KEY # remove key
baseURL <- "https://api.propublica.org/congress/v1/"
grabCongress <- function(x) {
  content(GET(x, add_headers(`X-API-Key` = key)), 'parsed')}
rm_null <- function(x) {
  x[sapply(x, is.null)] <- NA
  return(x) }


# These bits of code are specifically for 'sns' mini-project
# Seems like the 94th senate sometimes work and sometimes does not
senateURLs <- paste0(baseURL, 93:116, "/senate/members.json")
stlist <- lapply(senateURLs, grabCongress) %>%
  lapply(function(x) x$results[[1]] %>% as_tibble())

sns <- c("Biden", "Booker", "Harris", "Klobuchar", "Sanders", "Warren")
senatorInfo <- lapply(seq_along(stlist), function(senate) {
  lapply(1:length(stlist[[senate]]$members), function(x) {
    rm_null(stlist[[senate]]$members[[x]]) } ) %>% bind_rows() } ) %>%
  bind_rows(.id = "congress") %>%
  # this mutate line is also affected by whether or not 94th senate works
  mutate(congress = as.numeric(congress) + 92) %>%
    filter(last_name == sns[[1]] | last_name == sns[[2]] |
      last_name == sns[[3]] | last_name == sns[[4]] | last_name == sns[[5]] |
      last_name == sns[[6]])
senatorCols <- senatorInfo %>% names() 
senatorCols %>% length() # 47

senatorInfo <- senatorInfo %>% select(congress, id, last_name, total_votes,
  missed_votes, missed_votes_pct, votes_against_party_pct, seniority,
  last_updated, next_election) %>%
    rename(missed_pct = missed_votes_pct,
    against_pct = votes_against_party_pct)
senatorIDs <- senatorInfo$id %>% unique()

# GET https://api.propublica.org/congress/v1/members/{member-id}/votes.json



# Written before November 2019
allHouseURLs <- paste0(baseURL, c(98:116),"/house/members.json")
allHouses <- lapply(allHouseURLs, grabCongress)
HouseTibble <- lapply(allHouses, function(x) {x$results[[1]] %>% as_tibble} )
RepsList <- lapply(1:19, function(house) { 
  lapply(1:length(HouseTibble[[house]]$members), function(x) {
    rm_null(HouseTibble[[house]]$members[[x]]) } ) %>% bind_rows() } )
# This (I think) solves the problem of missing values for certain reps
# 'bind_rows()' is flexible enough to able to add NAs to any missing column

reps <- RepsList %>% bind_rows(.id = "congress") %>%
  mutate(congress = as.numeric(congress) + 97)


allsenateURLs <- paste0(baseURL,c(80:116),"/senate/members.json")
allSenates <- lapply(allsenateURLs, grabCongress)
SenateTibble <- lapply(allSenates, function(x) {x$results[[1]] %>% as_tibble} )
SenatorsList <- lapply(1:37, function(senate) {
  lapply(1:length(SenateTibble[[senate]]$members), function(x) {
    rm_null(SenateTibble[[senate]]$members[[x]]) } ) %>% bind_rows() } )

senators <- SenatorsList %>% bind_rows(.id = "congress") %>% 
  mutate(congress = as.numeric(congress) + 79)


# votes by type: missed, party, loneno, perfect; 102-116 House 80-116 Senate
house_vote_url <- paste0(baseURL, c(102:116), "/house/votes/party.json")
house_party_votes <- lapply(house_vote_url, grabCongress)
HousePartyTibble <- lapply(1:15, function(x) {
  house_party_votes[[x]]$results[[1]] %>% as_tibble } )
HousePartyList <- lapply(1:15, function(house) {
  lapply(1:length(HousePartyTibble[[house]]$members), function(x) {
    HousePartyTibble[[house]]$members[[x]] } ) %>% bind_rows } )
house_party <- bind_rows(HousePartyList, .id = "congress") %>%
  mutate(congress = as.numeric(congress) + 101)

senate_vote_url <- paste0(baseURL, c(80:116), "/senate/votes/party.json")
senate_party_votes <- lapply(senate_vote_url, grabCongress)
SenatePartyTibble <- lapply(1:37, function(x) {
  senate_party_votes[[x]]$results[[1]] %>% as_tibble } )
SenatePartyList <- lapply(22:37, function(senate) {
  lapply(1:length(SenatePartyTibble[[senate]]$members), function(x) {
    SenatePartyTibble[[senate]]$members[[x]] } ) %>% bind_rows } )
senate_party <- bind_rows(SenatePartyList, .id = "congress") %>%
  mutate(congress = as.numeric(congress) + 100)



recent <- lapply(1:450, function(member) {
  PartyTibble[[14]]$members[[member]] } ) %>% bind_rows

a <- PartyTibble[[14]]$members[[1]]
b <- PartyTibble[[14]]$members[[2]]
bind_rows(a,b)



grabExpenses <- function(x) {
  content(GET(x, add_headers(`X-API-Key` = key)), 'parsed')}

memberIDs <- filter(senators, senate == 37)$id %>% unique()
category <- "total"

allExpenseURLs <- paste0("https://api.propublica.org/congress/v1/members/", 
  memberIDs, "/office_expenses/category/", category, ".json")
allExpenses <- lapply(allExpenseURLs, grabExpenses)

allExpenses
names(allExpenses[[2]])

sapply(1:7, function(x) { allExpenses[[2]][[x]] } )

allExpenses[[2]]$results







